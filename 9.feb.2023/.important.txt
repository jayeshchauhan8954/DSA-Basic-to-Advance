// Map and Set in js

// Map is a data structure which holds elements as (key, value) pair, and keys in a map are unique.

=====================================================================================

//notes for Anagram

let's have two string 
first word may be => "word"
second word may be => "drow"
Now check both have equal numbers of character and should have same characters
Thus, it means these two words are "Anagram". Also, the arrangment of those words may be different.
=====PROPERTIES=====
1. they should have same lenth
2. the frequency of the every character in each string should be same

let us consider an example
took a word "eclectic"
frequency=>
e - 2
c - 3
l - 1
t - 1
i - 1
now took another word "ctilcece"
frequency=>
c - 3
t - 1
i - 1
l - 1
e - 2
So we can say that, these two above words are Anagrams.

=====================================================================================

// notes for first non reapeating character

let the word => "character"
first find frequency of character
frequency=>
c - 2
h - 1
a - 2
r - 2
t - 1
e - 1
thus the first non repeating character is "h"

======================================================================================


// note for check if there is sum of positive and negative is 0

let take an arr  = [4,2,0,1,6]
let take another arr  = [2,6,5,1]

so how to solve this,
step 1. find all the sub array
step 2. now check the sum of sub array is 0 or not;
if yes the return true, if no return false

note => sub array will contigious or we can make sub array and  sum from any where

sol:-  we can do this with for loop but it will result it O(n2)
so I will do this using Set
to solve,
first take an array [4,2,-3,1,6]
create a variable sum and initialize this at zero index
and try to add other next and set it to Set and check it's sum is equal to 0 (zero) then return that pair of set if not increment the counter and push it in sum set and every time check with sum that sum is equal to sum's element or not


=============================================================================================================================

// Notes for find subArray with sum of X;

let take an array = [1,4,20,3,10,5]

let x may be 33;

so we have to find the subArray here to for sum of x in our case i.e., 33

if yes then return indexes and if not then return -1;



====================================================================================================================================

// Notes for longest consecutive sequence

consecutive sequence is one by one

let's take an array = [5,1,3,9,8,2,4]

first put it into set thus if there is any repeating number is then it will remove it and give only unique


===================================================================================================================================
shift negative element to end of array
can be done by two pointer array


====================================================================================================================================
// Note for cyclically rotate array by 1

indexes should be +1 and last element will come at first position